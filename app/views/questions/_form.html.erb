
<%# if @question is persisted then the `form_for` helper will make the action submit to question_path(@question) and it will make the HTTP request PATCH. form_for will also prepopulate the fields with the data fetched from the database%>

<%# form_for is a Rails helper that expected to be given an ActiveRecord object as a first argument. If the object is not persisted it will automatically set the action for the form to the associated controller create action. In this case it will make the action go to "questions_path" and it will automatically set the method to "POST"

if @question has any of it's attributes set, it will populate the corresponding field with that data.%>

<%#= @question.errors.full_messages.join(", ") %>
<%= simple_form_for @question do |f| %>
  <!-- <div>
    <%= f.label :title %>
    <%= f.text_field :title %>
  </div> -->
  <%= f.input :title %>
  <!-- <div>
    <%= f.label :body %>
    <%= f.text_area :body %>
  </div> -->
  <%= f.input :body %>
  <%= f.input :image %>
  <!-- <div> -->
  <%= f.association :tags, as: :check_boxes %>
    <!-- <%= f.label :tag_ids %>
    <%#= f.collection_check_boxes(:tag_ids, Tag.order(:title), :id, :title) %> -->
  <!-- </div> -->
  <!-- <div> -->
  <%= f.association :category, include_blank: false %>
        <%#= f.collection_select :category_id, Category.all, :id, :name %>
  <% if current_user.using_twitter? && !@question.persisted? %>
    <%= f.input :tweet_it, as: :boolean %>
  <% end %>
  <%= f.button :submit, class: "btn-primary" %>
  <%#= f.submit %>
<% end %>
